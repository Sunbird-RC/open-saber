<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.1.1 r1855137">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
        <collectionProp name="UserParameters.names">
          <stringProp name="-758770169">server_name</stringProp>
        </collectionProp>
        <collectionProp name="UserParameters.thread_values">
          <collectionProp name="-1850417723">
            <stringProp name="-1204607085">localhost</stringProp>
          </collectionProp>
        </collectionProp>
        <boolProp name="UserParameters.per_iteration">false</boolProp>
      </UserParameters>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="Teacher" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">4</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </SetupThreadGroup>
      <hashTree>
        <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="User Parameters" enabled="true">
          <collectionProp name="UserParameters.names">
            <stringProp name="-1290161601">prefixStr</stringProp>
          </collectionProp>
          <collectionProp name="UserParameters.thread_values">
            <collectionProp name="90815">
              <stringProp name="97">a</stringProp>
            </collectionProp>
            <collectionProp name="90853">
              <stringProp name="98">b</stringProp>
            </collectionProp>
            <collectionProp name="90891">
              <stringProp name="99">c</stringProp>
            </collectionProp>
            <collectionProp name="1822529">
              <stringProp name="100">d</stringProp>
            </collectionProp>
          </collectionProp>
          <boolProp name="UserParameters.per_iteration">false</boolProp>
        </UserParameters>
        <hashTree/>
        <CounterConfig guiclass="CounterConfigGui" testclass="CounterConfig" testname="Counter_[counter_value]" enabled="true">
          <stringProp name="CounterConfig.start">1</stringProp>
          <stringProp name="CounterConfig.end"></stringProp>
          <stringProp name="CounterConfig.incr">1</stringProp>
          <stringProp name="CounterConfig.name">counter_value</stringProp>
          <stringProp name="CounterConfig.format"></stringProp>
          <boolProp name="CounterConfig.per_user">false</boolProp>
        </CounterConfig>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddTeacher_[osid]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;open-saber.registry.create&quot;,&#xd;
  &quot;ver&quot;: &quot;1.0&quot;,&#xd;
  &quot;ets&quot;: &quot;11234&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;did&quot;: &quot;&quot;,&#xd;
    &quot;key&quot;: &quot;&quot;,&#xd;
    &quot;msgid&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;Teacher&quot;: {&#xd;
      &quot;signatures&quot;: [{&#xd;
        &quot;@type&quot;: &quot;sc:GraphSignature2012&quot;,&#xd;
        &quot;signatureFor&quot;: &quot;http://localhost:8080/serialNum&quot;,&#xd;
        &quot;creator&quot;: &quot;https://example.com/i/pat/keys/5&quot;,&#xd;
        &quot;created&quot;: &quot;2017-09-23T20:21:34Z&quot;,&#xd;
        &quot;nonce&quot;: &quot;2bbgh3dgjg2302d-d2b3gi423d42&quot;,&#xd;
        &quot;signatureValue&quot;: &quot;eyiOiJKJ0eXA...OEjgFWFXk&quot;&#xd;
      },{&#xd;
        &quot;@type&quot;: &quot;sc:GraphSignature2012&quot;,&#xd;
        &quot;signatureFor&quot;: &quot;http://localhost:8080/nationalIdentifier&quot;,&#xd;
        &quot;creator&quot;: &quot;https://example.com/i/pat/keys/5&quot;,&#xd;
        &quot;created&quot;: &quot;2017-09-23T20:21:34Z&quot;,&#xd;
        &quot;nonce&quot;: &quot;2bbgh3dgjg2302d-d2b3gi423d44&quot;,&#xd;
        &quot;signatureValue&quot;: &quot;eyiOiJABDCeXA...OEjgFWFXk&quot;&#xd;
      }],&#xd;
      &quot;serialNum&quot;: ${counter_value},&#xd;
      &quot;teacherCode&quot;: &quot;${prefixStr}${counter_value}&quot;,&#xd;
      &quot;nationalIdentifier&quot;: &quot;1234567890123456&quot;,&#xd;
      &quot;teacherName&quot;: &quot;TeacherName_${counter_value}&quot;,&#xd;
      &quot;gender&quot;: &quot;GenderTypeCode-MALE&quot;,&#xd;
      &quot;birthDate&quot;: &quot;1990-12-06&quot;,&#xd;
      &quot;socialCategory&quot;: &quot;SocialCategoryTypeCode-GENERAL&quot;,&#xd;
      &quot;highestAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-PHD&quot;,&#xd;
      &quot;highestTeacherQualification&quot;: &quot;TeacherQualificationTypeCode-MED&quot;,&#xd;
      &quot;yearOfJoiningService&quot;: &quot;2014&quot;,&#xd;
      &quot;teachingRole&quot;: {&#xd;
        &quot;@type&quot;: &quot;TeachingRole&quot;,&#xd;
        &quot;teacherType&quot;: &quot;TeacherTypeCode-HEAD&quot;,&#xd;
        &quot;appointmentType&quot;: &quot;TeacherAppointmentTypeCode-REGULAR&quot;,&#xd;
        &quot;classesTaught&quot;: &quot;ClassTypeCode-SECONDARYANDHIGHERSECONDARY&quot;,&#xd;
        &quot;appointedForSubjects&quot;: &quot;SubjectCode-ENGLISH&quot;,&#xd;
        &quot;mainSubjectsTaught&quot;: &#xd;
          [&quot;SubjectCode-SOCIALSTUDIES&quot;],&#xd;
         &quot;appointmentYear&quot;: &quot;2015&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromBRC&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromBlockResourceCentre&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;10&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromCRC&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromClusterResourceCentre&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;2&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromDIET&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromDIET&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;5.5&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromOthers&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromOthers&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;3.5&quot;&#xd;
      },&#xd;
      &quot;nonTeachingAssignmentsForAcademicCalendar&quot;: {&#xd;
        &quot;@type&quot;: &quot;NonTeachingAssignmentsForAcademicCalendar&quot;,&#xd;
        &quot;daysOfNonTeachingAssignments&quot;: 6&#xd;
      },&#xd;
      &quot;basicProficiencyLevel&quot;: &#xd;
        [{&#xd;
          &quot;@type&quot;: &quot;BasicProficiencyLevel&quot;,&#xd;
          &quot;proficiencySubject&quot;: &quot;SubjectCode-MATH&quot;,&#xd;
          &quot;proficiencyAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-PHD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;@type&quot;: &quot;BasicProficiencyLevel&quot;,&#xd;
          &quot;proficiencySubject&quot;: &quot;SubjectCode-ENGLISH&quot;,&#xd;
          &quot;proficiencyAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-HIGHERSECONDARY&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;@type&quot;: &quot;BasicProficiencyLevel&quot;,&#xd;
          &quot;proficiencySubject&quot;: &quot;SubjectCode-SOCIALSTUDIES&quot;,&#xd;
          &quot;proficiencyAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-SECONDARY&quot;&#xd;
        }],&#xd;
      &quot;disabilityType&quot;: &quot;DisabilityCode-NA&quot;,&#xd;
      &quot;trainedForChildrenSpecialNeeds&quot;: &quot;YesNoCode-YES&quot;,&#xd;
      &quot;trainedinUseOfComputer&quot;: &quot;YesNoCode-YES&quot;&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/add</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-authenticated-user-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor[osid]" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">osid</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.Teacher.osid</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-977551856">Authentication token is invalid</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
            <stringProp name="Assertion.scope">all</stringProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}==false</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Authenticate_[access_token]" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">admin-cli</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">dev.sunbirded.org</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/auth/realms/sunbird/protocol/openid-connect/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">access_token</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
          <stringProp name="IfController.condition">&quot;${osid}&quot;===&quot;&quot;</stringProp>
          <boolProp name="IfController.evaluateAll">false</boolProp>
        </IfController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="AddTeacher2_[osid]" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;open-saber.registry.create&quot;,&#xd;
  &quot;ver&quot;: &quot;1.0&quot;,&#xd;
  &quot;ets&quot;: &quot;11234&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;did&quot;: &quot;&quot;,&#xd;
    &quot;key&quot;: &quot;&quot;,&#xd;
    &quot;msgid&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;Teacher&quot;: {&#xd;
      &quot;signatures&quot;: [{&#xd;
        &quot;@type&quot;: &quot;sc:GraphSignature2012&quot;,&#xd;
        &quot;signatureFor&quot;: &quot;http://localhost:8080/serialNum&quot;,&#xd;
        &quot;creator&quot;: &quot;https://example.com/i/pat/keys/5&quot;,&#xd;
        &quot;created&quot;: &quot;2017-09-23T20:21:34Z&quot;,&#xd;
        &quot;nonce&quot;: &quot;2bbgh3dgjg2302d-d2b3gi423d42&quot;,&#xd;
        &quot;signatureValue&quot;: &quot;eyiOiJKJ0eXA...OEjgFWFXk&quot;&#xd;
      },{&#xd;
        &quot;@type&quot;: &quot;sc:GraphSignature2012&quot;,&#xd;
        &quot;signatureFor&quot;: &quot;http://localhost:8080/nationalIdentifier&quot;,&#xd;
        &quot;creator&quot;: &quot;https://example.com/i/pat/keys/5&quot;,&#xd;
        &quot;created&quot;: &quot;2017-09-23T20:21:34Z&quot;,&#xd;
        &quot;nonce&quot;: &quot;2bbgh3dgjg2302d-d2b3gi423d44&quot;,&#xd;
        &quot;signatureValue&quot;: &quot;eyiOiJABDCeXA...OEjgFWFXk&quot;&#xd;
      }],&#xd;
      &quot;serialNum&quot;: ${counter_value},&#xd;
      &quot;teacherCode&quot;: &quot;${prefixStr}${counter_value}&quot;,&#xd;
      &quot;nationalIdentifier&quot;: &quot;1234567890123456&quot;,&#xd;
      &quot;teacherName&quot;: &quot;TeacherName_${counter_value}&quot;,&#xd;
      &quot;gender&quot;: &quot;GenderTypeCode-MALE&quot;,&#xd;
      &quot;birthDate&quot;: &quot;1990-12-06&quot;,&#xd;
      &quot;socialCategory&quot;: &quot;SocialCategoryTypeCode-GENERAL&quot;,&#xd;
      &quot;highestAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-PHD&quot;,&#xd;
      &quot;highestTeacherQualification&quot;: &quot;TeacherQualificationTypeCode-MED&quot;,&#xd;
      &quot;yearOfJoiningService&quot;: &quot;2014&quot;,&#xd;
      &quot;teachingRole&quot;: {&#xd;
        &quot;@type&quot;: &quot;TeachingRole&quot;,&#xd;
        &quot;teacherType&quot;: &quot;TeacherTypeCode-HEAD&quot;,&#xd;
        &quot;appointmentType&quot;: &quot;TeacherAppointmentTypeCode-REGULAR&quot;,&#xd;
        &quot;classesTaught&quot;: &quot;ClassTypeCode-SECONDARYANDHIGHERSECONDARY&quot;,&#xd;
        &quot;appointedForSubjects&quot;: &quot;SubjectCode-ENGLISH&quot;,&#xd;
        &quot;mainSubjectsTaught&quot;: &#xd;
          [&quot;SubjectCode-SOCIALSTUDIES&quot;],&#xd;
         &quot;appointmentYear&quot;: &quot;2015&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromBRC&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromBlockResourceCentre&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;10&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromCRC&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromClusterResourceCentre&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;2&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromDIET&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromDIET&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;5.5&quot;&#xd;
      },&#xd;
      &quot;inServiceTeacherTrainingFromOthers&quot;: {&#xd;
        &quot;@type&quot;: &quot;InServiceTeacherTrainingFromOthers&quot;,&#xd;
        &quot;daysOfInServiceTeacherTraining&quot;: &quot;3.5&quot;&#xd;
      },&#xd;
      &quot;nonTeachingAssignmentsForAcademicCalendar&quot;: {&#xd;
        &quot;@type&quot;: &quot;NonTeachingAssignmentsForAcademicCalendar&quot;,&#xd;
        &quot;daysOfNonTeachingAssignments&quot;: 6&#xd;
      },&#xd;
      &quot;basicProficiencyLevel&quot;: &#xd;
        [{&#xd;
          &quot;@type&quot;: &quot;BasicProficiencyLevel&quot;,&#xd;
          &quot;proficiencySubject&quot;: &quot;SubjectCode-MATH&quot;,&#xd;
          &quot;proficiencyAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-PHD&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;@type&quot;: &quot;BasicProficiencyLevel&quot;,&#xd;
          &quot;proficiencySubject&quot;: &quot;SubjectCode-ENGLISH&quot;,&#xd;
          &quot;proficiencyAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-HIGHERSECONDARY&quot;&#xd;
        },&#xd;
        {&#xd;
          &quot;@type&quot;: &quot;BasicProficiencyLevel&quot;,&#xd;
          &quot;proficiencySubject&quot;: &quot;SubjectCode-SOCIALSTUDIES&quot;,&#xd;
          &quot;proficiencyAcademicQualification&quot;: &quot;AcademicQualificationTypeCode-SECONDARY&quot;&#xd;
        }],&#xd;
      &quot;disabilityType&quot;: &quot;DisabilityCode-NA&quot;,&#xd;
      &quot;trainedForChildrenSpecialNeeds&quot;: &quot;YesNoCode-YES&quot;,&#xd;
      &quot;trainedinUseOfComputer&quot;: &quot;YesNoCode-YES&quot;&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
            <stringProp name="HTTPSampler.port">8080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/add</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.implementation">Java</stringProp>
            <stringProp name="HTTPSampler.connect_timeout">60000</stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">x-authenticated-user-token</stringProp>
                  <stringProp name="Header.value">${access_token}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">osid</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.Teacher.osid</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              <stringProp name="Sample.scope">all</stringProp>
              <stringProp name="Scope.variable">osid</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">true</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
            <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
              <boolProp name="ResultCollector.error_logging">false</boolProp>
              <objProp>
                <name>saveConfig</name>
                <value class="SampleSaveConfiguration">
                  <time>true</time>
                  <latency>true</latency>
                  <timestamp>true</timestamp>
                  <success>true</success>
                  <label>true</label>
                  <code>true</code>
                  <message>true</message>
                  <threadName>true</threadName>
                  <dataType>true</dataType>
                  <encoding>false</encoding>
                  <assertions>true</assertions>
                  <subresults>true</subresults>
                  <responseData>false</responseData>
                  <samplerData>false</samplerData>
                  <xml>false</xml>
                  <fieldNames>true</fieldNames>
                  <responseHeaders>false</responseHeaders>
                  <requestHeaders>false</requestHeaders>
                  <responseDataOnError>false</responseDataOnError>
                  <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                  <assertionsResultsToSave>0</assertionsResultsToSave>
                  <bytes>true</bytes>
                  <sentBytes>true</sentBytes>
                  <url>true</url>
                  <threadCounts>true</threadCounts>
                  <idleTime>true</idleTime>
                  <connectTime>true</connectTime>
                </value>
              </objProp>
              <stringProp name="filename"></stringProp>
            </ResultCollector>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReadTeacher_[]" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;open-saber.registry.read&quot;,&#xd;
    &quot;ver&quot;: &quot;1.0&quot;,&#xd;
    &quot;ets&quot;: &quot;11234&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;did&quot;: &quot;&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgid&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	  &quot;Teacher&quot;: {&#xd;
          &quot;osid&quot;: &quot;${osid}&quot;,&#xd;
          &quot;includeSignatures&quot;: true&#xd;
    	  }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/read</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-authenticated-user-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            <stringProp name="Sample.scope">all</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-589695501">UNSUCCESSFUL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="UpdateTeacher_[]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;open-saber.registry.update&quot;,&#xd;
    &quot;ver&quot;: &quot;1.0&quot;,&#xd;
    &quot;ets&quot;: &quot;11234&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;did&quot;: &quot;&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgid&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
       &quot;Teacher&quot;: {	&#xd;
       	&quot;osid&quot;: &quot;${osid}&quot;,&#xd;
		&quot;trainedinUseOfComputer&quot;: &quot;YesNoCode-NO&quot;&#xd;
       }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/update</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-authenticated-user-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames"></stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs"></stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.params.errmsg</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">true</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-589695501">UNSUCCESSFUL</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">6</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ReadTeacher_[trainedinUseOfComputer]" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;id&quot;: &quot;open-saber.registry.read&quot;,&#xd;
    &quot;ver&quot;: &quot;1.0&quot;,&#xd;
    &quot;ets&quot;: &quot;11234&quot;,&#xd;
    &quot;params&quot;: {&#xd;
        &quot;did&quot;: &quot;&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgid&quot;: &quot;&quot;&#xd;
    },&#xd;
    &quot;request&quot;: {&#xd;
    	  &quot;Teacher&quot;: {&#xd;
          &quot;osid&quot;: &quot;${osid}&quot;,&#xd;
          &quot;includeSignatures&quot;: true&#xd;
    	  }&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/read</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-authenticated-user-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">trainedinUseOfComputer</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.result.Teacher.trainedinUseOfComputer</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.result.Teacher.trainedinUseOfComputer</stringProp>
            <stringProp name="EXPECTED_VALUE">YesNoCode-NO</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>true</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">read.csv</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchTeacherIndexField" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;open-saber.registry.search&quot;,&#xd;
  &quot;ver&quot;: &quot;1.0&quot;,&#xd;
  &quot;ets&quot;: &quot;11234&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;did&quot;: &quot;&quot;,&#xd;
    &quot;key&quot;: &quot;&quot;,&#xd;
    &quot;msgid&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;entityType&quot;: [&quot;Teacher&quot;],&#xd;
    &quot;filters&quot;: {&#xd;
    	  &quot;serialNum&quot;: {&quot;gte&quot;: ${counter_value}}&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/search</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-authenticated-user-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.result.Teacher[0].trainedinUseOfComputer</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>true</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">searchIndex.csv</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="SearchTeacherNonIndexField" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;id&quot;: &quot;open-saber.registry.search&quot;,&#xd;
  &quot;ver&quot;: &quot;1.0&quot;,&#xd;
  &quot;ets&quot;: &quot;11234&quot;,&#xd;
  &quot;params&quot;: {&#xd;
    &quot;did&quot;: &quot;&quot;,&#xd;
    &quot;key&quot;: &quot;&quot;,&#xd;
    &quot;msgid&quot;: &quot;&quot;&#xd;
  },&#xd;
  &quot;request&quot;: {&#xd;
    &quot;entityType&quot;: [&quot;Teacher&quot;],&#xd;
    &quot;filters&quot;: {&#xd;
    	  &quot;yearOfJoiningService&quot;: {&quot;eq&quot; : &quot;2014&quot;}&#xd;
    }&#xd;
  }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server_name}</stringProp>
          <stringProp name="HTTPSampler.port">8080</stringProp>
          <stringProp name="HTTPSampler.protocol">http</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/search</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.implementation">Java</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">x-authenticated-user-token</stringProp>
                <stringProp name="Header.value">${access_token}</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.result.Teacher[0].serialNum</stringProp>
            <stringProp name="EXPECTED_VALUE"></stringProp>
            <boolProp name="JSONVALIDATION">false</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">true</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>true</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>true</responseHeaders>
                <requestHeaders>true</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">searchNonIndex.csv</stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename">a_teacher.csv</stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>true</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename">authValidateOnly.csv</stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
